{"name":"3D models\\Trump","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":false,"formula":"[advanced]\r\n\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n   \tvar sdf = new SignedDistance(\"Trump.stl\");\r\n\tvar f = ((double x, double y,double z) => sdf.From(x, y, z));\r\n  \tvar b = new IneqTree(f) ;\r\n  \r\n    var res = new IneqMesh\r\n    {\r\n        X0 = -1,\r\n        Y0 = -1,\r\n        Z0 = -0.8,\r\n        X1 = 1,\r\n        Y1 = 1,\r\n        Z1 = 1,\r\n        D = 0.1d,\r\n        Boxed = true,\r\n        IneqTree =\r\n          b //| (# z+0.9)\r\n\t};\r\n  \r\n  \t//res.ProjectToSurfaceSpec[f] = sdf.Project;\r\n\tres.PrepareBackgroundMeshBeforeApriory = () => \r\n    {\r\n        for (int i = 0; i < 3; i++)\r\n        {\r\n      \t\tres.RefineTetrahedralMesh(0, 2, 0.05, false);\r\n      \t\tres.JiggleBackgroundMash(3);\r\n        }\r\n      \r\n      \t//res.RefineTetrahedralMesh(0, 1, 0.05);\r\n      \t\r\n    };\r\n  \r\n  \t/*res.PrepareBackgroundMesh = () => \r\n    {\r\n      \tres.FindCrossEdges(0,2);\r\n      \t//res.FindCrossEdges(0,6);\r\n    };*/  \r\n  \r\n  \treturn res;\r\n}\r\n"}