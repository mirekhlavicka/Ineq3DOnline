{"name":"3D models\\Muse from cylinder","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":false,"formula":"[advanced]\r\n\r\nSignedDistance sdf = new SignedDistance(\"Muse.stl\");\r\nFuncXYZ c = (x,y,z) => sqrt(x*x + z*z) - 0.75;\r\n\r\nprivate IneqTree Muse(double t, double a)\r\n{\r\n\tFuncXYZ m =  (x,y,z) => t * sdf.From(x,y,z) + (1-t) * c(x,y,z);\r\n  \r\n\tvar b = new IneqTree(m); \r\n  \r\n\tb.Transform(delegate(ref double x, ref double y, ref double z) \r\n\t{\r\n      \r\n      \tdouble x1 = x * cos(a) - z * sin(a);\r\n        double z1 = x * sin(a) + z * cos(a);\r\n        x = x1; z = z1;\r\n\r\n\t\tz += 0.7d;      \r\n\r\n      \tx *= 1.7d; y *= 1.7d; z *= 1.7d;  \r\n    });\r\n  \r\n\treturn b;  \r\n}\r\n\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n\r\n\tvar m4 = Muse(0.72d, 0 );\r\n\tvar m2 = Muse(0.77d, PI /2 );\r\n  \tvar m3 = Muse(0.88d, PI );  \r\n\tvar m1 = Muse(1d,  3 * PI /2 );\r\n  \r\n    var res = new IneqMesh\r\n    {\r\n        X0 = -1.2,\r\n        Y0 = -1.2,\r\n        Z0 = -1.2,\r\n        X1 = 1.2,\r\n        Y1 = 1.2,\r\n        Z1 = 1.2,\r\n        D = 0.1,\r\n        Boxed = true,\r\n        IneqTree =\r\n          (m1 | m2 | m3 | m4 | Cylinder(0,0.7,0,0, 0.6,0, 1, 0.1))\r\n\t};\r\n\r\n  \t//res.ProjectToSurfaceSpec[sdf.From] = sdf.Project;\t\r\n\r\n  \tres.PrepareBackgroundMeshBeforeApriory = () => \r\n    {\r\n      \r\n        for (int i = 0; i < 4; i++)\r\n        {\r\n      \t\tres.RefineTetrahedralMesh(0, 2, 0.03, false, 0);\r\n      \t\tres.JiggleBackgroundMash(3);\r\n        }      \r\n      \t//res.RefineTetrahedralMesh(0, 1, 0.05);      \t\r\n    };\r\n  \r\n  \t/*res.PrepareBackgroundMesh = () => \r\n    {\r\n      \tres.FindCrossEdges(0,2);\r\n    };*/  \r\n    \r\n\treturn res;    \r\n}"}