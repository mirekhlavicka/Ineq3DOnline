{"name":"3D models\\Pig","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":false,"formula":"[advanced]\r\n\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n   \tvar sdf = new SignedDistance(\"pig.stl\");\r\n\tvar f = ((double x, double y,double z) => sdf.From(x, y, z));\r\n  \tvar b = new IneqTree(f) ;\r\n  \r\n    var res = new IneqMesh\r\n    {\r\n        X0 = -1,\r\n        Y0 = -1,\r\n        Z0 = -1,\r\n        X1 = 1,\r\n        Y1 = 1,\r\n        Z1 = 1,\r\n        D = 0.1d,\r\n        Boxed = false,\r\n        IneqTree =\r\n          b | Torus(0, 0.4, -0.1, 0.05, 0.2, 1, 0, 0)\r\n\t};\r\n  \r\n  \tres.ProjectToSurfaceSpec[f] = sdf.Project;\r\n  \tres.PrepareBackgroundMeshBeforeApriory = () => \r\n    {\r\n      \tres.RefineTetrahedralMeshNearPointRedGreen(new Point[]\r\n\t\t{ \r\n          new Point(0, 0.5, -0.8),\r\n          new Point(0, 0.3, 0.6),\r\n          new Point(0, 0.4, -0.1)\r\n\t\t}, 0.4d, 2);\r\n      \tres.RefineTetrahedralMesh(0, 20, 0.02);\r\n      \tres.RefineTetrahedralMesh(1, 20, 0.02);\r\n    };\r\n  \r\n  \treturn res;\r\n}\r\n"}