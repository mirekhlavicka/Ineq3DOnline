{"name":"Testy\\Pig fine","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":false,"formula":"[advanced]\r\n\r\nprivate IneqTree Heart(double d)\r\n{\r\n  \tvar h = IneqTreeParser.FromFormula(@\"(2*z^2+y^2+x^2-1)^3<(0.1*z^2+y^2)*x^3\");//Ball(0, 0, 0, 1);\r\n  \r\n  \th.Transform(delegate(ref double x, ref double y, ref double z)\r\n\t{\r\n      \tdouble a = PI/2;\t\r\n      \tdouble z1 = z * cos(a) - y * sin(a);\r\n      \tdouble y1 = z * sin(a) + y * cos(a);\r\n      \tz = z1; y = y1;\r\n\r\n      \r\n        a = PI/2;\t\r\n        double x1 = x * cos(a) - z * sin(a);\r\n        z1 = x * sin(a) + z * cos(a);\r\n        x = x1; z = z1;         \r\n\r\n\r\n      \tx -= 0.1;\r\n      \ty += 0.2;\r\n      \tz += d;//0.15;\r\n      \tx *= 5.0d; y *= 5.0d; z *= 5.0d;      \t\r\n    });\r\n  \r\n\treturn h;  \r\n}\r\n\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n   \tvar sdf = new SignedDistance(\"pig.stl\");\r\n\tvar f = ((double x, double y,double z) => sdf.From(x, y, z));\r\n  \tvar b = new IneqTree(f);\r\n\tvar h = Heart(0.15d);\r\n  \tvar h1 = Heart(-0.15d);\r\n  \r\n    var res = new IneqMesh\r\n    {\r\n        X0 = -1,\r\n        Y0 = -1,\r\n        Z0 = -1,\r\n        X1 = 1,\r\n        Y1 = 1,\r\n        Z1 = 1,\r\n        D = 0.1d,\r\n        Boxed = false,\r\n        IneqTree =\r\n          b | Torus(0, 0.4, -0.1, 0.04, 0.15, 1, 0, 0) | h | h1\r\n\t};\r\n  \r\n  \tres.ProjectToSurfaceSpec[f] = sdf.Project;\r\n  \tres.PrepareBackgroundMeshBeforeApriory = () => \r\n    {\r\n      \tres.RefineTetrahedralMeshNearPointRedGreen(new Point[]\r\n\t\t{ \r\n          //new Point(0, 0.5, -0.8),\r\n          //new Point(0, 0.3, 0.6),\r\n          new Point(0, 0.4, -0.1)\r\n\t\t}, 0.2d, 2);\r\n      \r\n        for (int i = 0; i < 4; i++)\r\n        {\r\n      \t\tres.RefineTetrahedralMesh(0, 4, 0.02);\r\n      \t\tres.JiggleBackgroundMash(3);\r\n        }\r\n      \r\n      \tres.RefineTetrahedralMesh(0, 3, 0.02);          \r\n      \tres.RefineTetrahedralMesh(1, 5, 0.02);\r\n      \tres.RefineTetrahedralMesh(2, 5, 0.1);\r\n      \tres.RefineTetrahedralMesh(3, 5, 0.1);\r\n    };\r\n  \r\n  \treturn res;\r\n}\r\n"}