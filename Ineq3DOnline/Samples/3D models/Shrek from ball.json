{"name":"3D models\\Shrek from ball","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":false,"formula":"[advanced]\r\n\r\nSignedDistance sdf = new SignedDistance(\"Shrek Head.stl\");\r\nFuncXYZ c = (x,y,z) => sqrt(pow(x,2)  + pow(y,2) + pow(z,2)) - 0.75;\r\n\r\nprivate IneqTree Muse(double t, double a)\r\n{\r\n\tFuncXYZ m =  (x,y,z) => t * sdf.From(z,-x,-y) + (1-t) * c(x,y,z);\r\n  \r\n\tvar b = new IneqTree(m); \r\n  \r\n\tb.Transform(delegate(ref double x, ref double y, ref double z) \r\n\t{\r\n      \r\n      \tdouble x1 = x * cos(a) - z * sin(a);\r\n        double z1 = x * sin(a) + z * cos(a);\r\n        x = x1; z = z1;\r\n\r\n\t\tz += 0.75d;      \r\n\r\n      \tx *= 2d; y *= 2d; z *= 2d;  \r\n    });\r\n  \r\n\treturn b;  \r\n}\r\n\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n\tint p = 5;\r\n  \tIneqTree[] m = new IneqTree[5];\r\n  \tfor(int i=0; i < p; i++)  \r\n    {\r\n\t\tm[i] = Muse(/*i == p -1 ? 0 : */1.0 - 0.85 * (double)i/p, (double)i * 2 * PI / p);      \r\n    }\r\n  \r\n    var res = new IneqMesh\r\n    {\r\n        X0 = -1.2,\r\n        Y0 = -1.2,\r\n        Z0 = -1.2,\r\n        X1 = 1.2,\r\n        Y1 = 1.2,\r\n        Z1 = 1.2,\r\n        D = 0.1,\r\n        Boxed = true,\r\n        IneqTree =\r\n          (m[0] | m[1] | m[2] | m[3] | m[4] | Cylinder(0,0.4,0,0, 0.3,0, 1.17, 0.1))\r\n\t};\r\n\r\n\r\n  \tres.PrepareBackgroundMeshBeforeApriory = () => \r\n    {\r\n      \r\n        for (int i = 0; i < 4; i++)\r\n        {\r\n      \t\tres.RefineTetrahedralMesh(0, 2, 0.03, false, 0);\r\n      \t\tres.JiggleBackgroundMash(3);\r\n        }      \r\n      \r\n        for (int i = 0; i < 4; i++)\r\n        {\r\n      \t\tres.RefineTetrahedralMesh(1, 2, 0.03, false, 0);\r\n      \t\tres.JiggleBackgroundMash(3);\r\n        }      \r\n      \r\n      \t//res.RefineTetrahedralMesh(0, 1, 0.05);      \t\r\n    };\r\n  \r\n  \t/*res.PrepareBackgroundMesh = () => \r\n    {\r\n      \tres.FindCrossEdges(0,2);\r\n    };*/  \r\n    \r\n\treturn res;    \r\n}"}