{"name":"Balls on ball","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":true,"formula":"[advanced]\r\nprivate IneqTree Balls(int count, double R, double r, double p)\r\n{\r\n    var res = new IneqTree((x, y, z) => 1);\r\n\r\n    for (int i = 0; i < count; i++)\r\n    {\r\n        double x0 = R * Math.Cos(i * 2 * Math.PI / count);\r\n        double y0 = R * Math.Sin(i * 2 * Math.PI / count);\r\n\r\n        res = res | ((x, y, z) =>  \r\n                Math.Pow(Math.Abs(x - x0),p) + \r\n\t\t\t\tMath.Pow(Math.Abs(y - y0),p) +\r\n\t\t\t\tMath.Pow(Math.Abs(z),p) - \r\n                Math.Pow(r,p));\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n\tvar p = 5d;\r\n  \tvar ball = new IneqTree((x, y, z) => Math.Pow(Math.Abs(x),p) + Math.Pow(Math.Abs(y),p)  + Math.Pow(Math.Abs(z),p) - Math.Pow(0.7d,p));\r\n  \r\n    return new IneqMesh\r\n    {\r\n        X0 = -1.0,\r\n        Y0 = -1.0,\r\n        Z0 = -1.0,\r\n        X1 = 1.0,\r\n        Y1 = 1.0,\r\n        Z1 = 1.0,\r\n        D = 0.1d,\r\n        Boxed = false,\r\n        IneqTree =\r\n                (\r\n                    ball &\r\n                   ((x, y, z) => -x*x - y*y + 0.05d)\r\n                ) |\r\n                Balls(8, 0.8d, 0.2d, p)\r\n    };\r\n}\r\n"}