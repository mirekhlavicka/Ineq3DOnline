{"name":"Halloween\\Pumpkin","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":false,"formula":"[advanced]\r\n\r\nprivate IneqTree Pumpkin(double r)\r\n{\r\n\tvar res = new IneqTree();\r\n  \r\n  \tFuncXYZ f = (x, y, z) =>\r\n    {\r\n      \tx /= r;\r\n      \ty /= r;\r\n      \tz /= r;\r\n      \r\n      \tz *= 1.2;\r\n      \tdouble rr = 1 - pow(abs(z),2.5) ;\r\n      \r\n      \tdouble a = atan(y/x);\r\n      \r\n      \trr = (0.7+rr*IneqTree.IneqNode.SmoothAbs(sin(6*a), 0.2)/4) * rr;\r\n      \r\n\t\treturn x*x + y*y - rr;      \r\n    };  \r\n  \r\n\tres = res | f;\r\n  \r\n\r\n  \treturn res;  \r\n}\r\n\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n   \tvar sdf = new SignedDistance(\"cute-dragon.stl\");\r\n\tvar f = ((double x, double y,double z) => sdf.From(x, y, z));\r\n  \tvar b = new IneqTree(f) ;  \r\n \r\n\tb.Transform(delegate(ref double x, ref double y, ref double z) \r\n\t{      \r\n      \tz -= 0.5d;\t\t      \r\n    });    \r\n  \r\n  \r\n    var res  = new IneqMesh\r\n    {\r\n        X0 = -1.0,\r\n        Y0 = -1.0,\r\n        Z0 = -1.05,\r\n        X1 = 1.0,\r\n        Y1 = 1.0,\r\n        Z1 = 1.5,\r\n        D = 0.08d,\r\n        Boxed = false,\r\n        IneqTree = ((Pumpkin(1) & !Pumpkin(0.85) & (# z - 0.5) & !Ball(0,0,-2.5,1.7)))//.ToFunc(0.03)\r\n          \t\t\t| b\r\n      };\r\n  \r\n\tres.PrepareBackgroundMeshBeforeApriory = () => \r\n    {      \r\n        for (int i = 0; i < 5; i++)\r\n        {\r\n      \t\tres.RefineTetrahedralMesh(b, 2, 0.05, false, 0);\r\n      \t\tres.JiggleBackgroundMash(3);\r\n        } \r\n    };      \r\n  \r\n\treturn res;  \r\n}\r\n"}