{"name":"Testy\\Cylinder with rf","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":false,"formula":"[advanced]\r\n\r\nprivate static Func<double, double> Lagrange(double[] X, double[] Y)\r\n{\r\n    int n = X.Length;\r\n\r\n    return (double x) =>\r\n    {\r\n        double result = 0.0;\r\n\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            double term = Y[i];\r\n            for (int j = 0; j < n; j++)\r\n            {\r\n              if (i != j)\r\n                {\r\n                  term *= (x - X[j]) / (X[i] - X[j]);\r\n                }\r\n          }\r\n          result += term;\r\n        }\r\n\r\n        return result;\r\n    };\r\n}\r\n\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n    double[] X = { 0, 0.5, 1,  1.7, 2 };\r\n    double[] Y = { 0.55,  0.75, 0.55,  0.15, 0.15 };    \r\n  \tvar  c1 = Cylinder(-1, 0, 0, 1, 0, 0, rf: Lagrange(X,Y));\r\n\r\n    double[] X1 = { 0, 0.5, 1,  1.7, 2 };\r\n    double[] Y1 = { 0.5,  0.7, 0.5,  0.12, 0.12 };    \r\n  \tvar  c2 = Cylinder(-0.95, 0, 0, 1.05, 0, 0, rf: Lagrange(X1,Y1));  \r\n  \r\n    return new IneqMesh\r\n    {\r\n        X0 = -1.1,\r\n        Y0 = -1.0,\r\n        Z0 = -1.0,\r\n        X1 = 1.0,\r\n        Y1 = 1.2,\r\n        Z1 = 1.0,\r\n        D = 0.08d,\r\n        Boxed = false,\r\n        IneqTree = (c1.ToFunc(0.03) & !c2)//.ToFunc(0.01) //& Ball(0,0,0,0.5)\r\n      };\r\n}\r\n"}