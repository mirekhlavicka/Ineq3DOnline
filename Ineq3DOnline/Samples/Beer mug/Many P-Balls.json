{"name":"Beer mug\\Many P-Balls","x0":-1.0,"y0":-1.0,"z0":-1.0,"x1":1.0,"y1":1.0,"z1":1.0,"maxDivisionCount":12,"quality":false,"curvatureQuality":false,"formula":"[advanced]\r\n\r\npublic IneqTree TorusPQ(double x0, double y0, double z0, double r, double R)\r\n{\r\n\r\n    return new IneqTree((x, y, z) =>\r\n    {\r\n\t\tdouble p, q;\r\n\r\n      \tx = x - x0;\r\n        y = y - y0;\r\n        z = z - z0;      \r\n\r\n      \tp = z < 0 ? 2 : 6;\r\n      \tq = 8;\r\n      \r\n      \tdouble pn = pow(pow(abs(x), p) + pow(abs(z), p), 1.0d/p);\r\n      \r\n      \tdouble sx =  R * x / pn;\r\n      \tdouble sz =  R * z / pn;\r\n\r\n\t\tdouble v = sqrt((x-sx)*(x-sx) + (z-sz)*(z-sz));\r\n      \r\n      \treturn pow(pow(y, q) + pow(2*v, q), 1.0/q) - r;\r\n\r\n    });\r\n}\r\n\r\npublic static IneqTree Balls(int count, int count1, double R, double r, double p = 2)\r\n{\r\n    IneqTree res = new IneqTree();\r\n\r\n\tfor (int j = 0; j < count1; j++)\r\n    {\r\n      \tdouble z0 = j * 0.27d;\r\n        for (int i = 0; i < count; i++)\r\n        {\r\n\t\t\tdouble a = ((double)i + ((double)(j % 2))/2.0d) * 2 * PI / count;\r\n          \tdouble x0 = R * cos(a);\r\n            double y0 = R * sin(a);\r\n\r\n\t\t\tIneqTree b = (# \r\n                pow(Math.Abs(x), p) +\r\n                pow(Math.Abs(y), p) +\r\n                pow(Math.Abs(z), p) -\r\n                pow(r, p));\r\n          \r\n\t\t\tb.Transform(delegate(ref double x, ref double y, ref double z) \r\n\t\t\t{\r\n\t\t        //double a = -PI/2;\r\n              \tx -= x0; y -= y0; z -= z0;\r\n\t\t\t\t\r\n              \tdouble aa = -a;\r\n              \r\n      \t\t\tdouble x1 = x * cos(aa) - y * sin(aa);\r\n        \t\tdouble y1 =x * sin(aa) + y * cos(aa);\r\n      \t\t\tx = x1; y = y1;\r\n              \r\n\t\t    });\r\n          \r\n          \tres = res | b;        }\r\n    }\r\n\r\n    return res;\r\n}\r\npublic IneqMesh GetIneqMesh()\r\n{\r\n    var res = new IneqMesh\r\n    {\r\n        X0 = -1.0,\r\n        Y0 = -1.0,\r\n        Z0 = -0.3,\r\n        X1 = 1.5,\r\n        Y1 = 1.0,\r\n        Z1 = 2.0,\r\n        D = 0.075d,\r\n        Boxed = true,\r\n        IneqTree = (\r\n          (TorusPQ(0.73, 0, 0.7, 0.15, 0.6) | Balls(8, 6, 0.5d, 0.267d, 4) | (# x*x + y*y - 0.25)) //.ToFunc(0.005) \r\n          & !Cylinder(0,0,0.9, 0,0,1.1, 0.6, 1)\r\n          & (# -z-0.15) & (#z - 1.5)\r\n          )//.ToFunc(0.01) \r\n        };\r\n  \r\n  \t\tres.PrepareBackgroundMeshBeforeApriory = () => \r\n    \t{\r\n        \tfor (int i = 0; i < 3; i++)\r\n        \t{\r\n      \t\t\tres.RefineTetrahedralMesh(0, 2, 0.05, false);\r\n      \t\t\tres.JiggleBackgroundMash(3);\r\n        \t}     \r\n    \t};\r\n\r\n\t\treturn res; \r\n  \r\n}\r\n"}